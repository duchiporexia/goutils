// Code generated by qtc from "batch_handler.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line batch_handler.qtpl:1
package internal

//line batch_handler.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line batch_handler.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line batch_handler.qtpl:1
func StreamGenerateBatchHandler(qw422016 *qt422016.Writer, data *handlerData) {
//line batch_handler.qtpl:1
	qw422016.N().S(`// Code generated by xvv, DO NOT EDIT.
// HandlerType: `)
//line batch_handler.qtpl:2
	qw422016.E().S(data.HandlerType.String())
//line batch_handler.qtpl:2
	qw422016.N().S(`

package `)
//line batch_handler.qtpl:4
	qw422016.E().S(data.Package)
//line batch_handler.qtpl:4
	qw422016.N().S(`
`)
//line batch_handler.qtpl:6
	name := data.Name
	isBatched := data.IsBatched
	handlerType := data.HandlerType

	hasKey := handlerType.hasKey()
	hasParams := data.ParamsType != nil
	hasReturn := data.ValueType != nil

	keyType := GetGoTypeName(data.KeyType)
	keyTypeComma := ""
	comma := ""
	if hasKey && hasParams {
		keyTypeComma = keyType + ", "
		comma = ", "
	} else if hasKey {
		keyTypeComma = keyType
	}
	paramsType := GetGoTypeName(data.ParamsType)
	valueType := GetGoTypeName(data.ValueType)

	valueTypeZeroValue := GetZeroValue(data.ValueType)

//line batch_handler.qtpl:28
	qw422016.N().S(`
import (
    "sync"
    "time"
`)
//line batch_handler.qtpl:32
	if hasKey && data.KeyType.ImportPath != "" {
//line batch_handler.qtpl:32
		qw422016.N().S(`    "`)
//line batch_handler.qtpl:33
		qw422016.E().S(data.KeyType.ImportPath)
//line batch_handler.qtpl:33
		qw422016.N().S(`"
`)
//line batch_handler.qtpl:34
	}
//line batch_handler.qtpl:35
	if hasParams && data.ParamsType.ImportPath != "" {
//line batch_handler.qtpl:35
		qw422016.N().S(`    "`)
//line batch_handler.qtpl:36
		qw422016.E().S(data.ParamsType.ImportPath)
//line batch_handler.qtpl:36
		qw422016.N().S(`"
`)
//line batch_handler.qtpl:37
	}
//line batch_handler.qtpl:38
	if hasReturn && data.ValueType.ImportPath != "" {
//line batch_handler.qtpl:38
		qw422016.N().S(`    "`)
//line batch_handler.qtpl:39
		qw422016.E().S(data.ValueType.ImportPath)
//line batch_handler.qtpl:39
		qw422016.N().S(`"
`)
//line batch_handler.qtpl:40
	}
//line batch_handler.qtpl:40
	qw422016.N().S(`)

type `)
//line batch_handler.qtpl:43
	qw422016.E().S(name)
//line batch_handler.qtpl:43
	qw422016.N().S(`Config struct {
`)
//line batch_handler.qtpl:44
	if isBatched {
//line batch_handler.qtpl:44
		qw422016.N().S(`    Do      func(`)
//line batch_handler.qtpl:45
		if hasKey {
//line batch_handler.qtpl:45
			qw422016.N().S(`keys []`)
//line batch_handler.qtpl:45
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:45
		}
//line batch_handler.qtpl:45
		if hasParams {
//line batch_handler.qtpl:45
			qw422016.N().S(`paramsList []`)
//line batch_handler.qtpl:45
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:45
		}
//line batch_handler.qtpl:45
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:45
		if hasReturn {
//line batch_handler.qtpl:45
			qw422016.N().S(`[]`)
//line batch_handler.qtpl:45
			qw422016.E().S(valueType)
//line batch_handler.qtpl:45
			qw422016.N().S(`, `)
//line batch_handler.qtpl:45
		}
//line batch_handler.qtpl:45
		qw422016.N().S(`[]error)
`)
//line batch_handler.qtpl:46
	} else {
//line batch_handler.qtpl:46
		qw422016.N().S(`    Do           func(`)
//line batch_handler.qtpl:47
		if hasKey {
//line batch_handler.qtpl:47
			qw422016.N().S(`key `)
//line batch_handler.qtpl:47
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:47
		}
//line batch_handler.qtpl:47
		if hasParams {
//line batch_handler.qtpl:47
			qw422016.N().S(`params `)
//line batch_handler.qtpl:47
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:47
		}
//line batch_handler.qtpl:47
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:47
		if hasReturn {
//line batch_handler.qtpl:47
			qw422016.E().S(valueType)
//line batch_handler.qtpl:47
			qw422016.N().S(`, `)
//line batch_handler.qtpl:47
		}
//line batch_handler.qtpl:47
		qw422016.N().S(`error)
`)
//line batch_handler.qtpl:48
	}
//line batch_handler.qtpl:48
	qw422016.N().S(`	Wait time.Duration
	MaxBatchSize int
`)
//line batch_handler.qtpl:51
	if handlerType.hasCacheDel() {
//line batch_handler.qtpl:51
		qw422016.N().S(`    CacheDel func(keys ...`)
//line batch_handler.qtpl:52
		qw422016.E().S(keyType)
//line batch_handler.qtpl:52
		qw422016.N().S(`) error
`)
//line batch_handler.qtpl:53
	}
//line batch_handler.qtpl:54
	if handlerType.hasCacheGet() {
//line batch_handler.qtpl:55
		if isBatched {
//line batch_handler.qtpl:55
			qw422016.N().S(`    CacheBatchGet func(keys []`)
//line batch_handler.qtpl:56
			qw422016.E().S(keyType)
//line batch_handler.qtpl:56
			qw422016.N().S(`) (`)
//line batch_handler.qtpl:56
			if hasReturn {
//line batch_handler.qtpl:56
				qw422016.N().S(`[]`)
//line batch_handler.qtpl:56
				qw422016.E().S(valueType)
//line batch_handler.qtpl:56
				qw422016.N().S(`, `)
//line batch_handler.qtpl:56
			}
//line batch_handler.qtpl:56
			qw422016.N().S(`error)
`)
//line batch_handler.qtpl:57
		} else {
//line batch_handler.qtpl:57
			qw422016.N().S(`    CacheGet func(key `)
//line batch_handler.qtpl:58
			qw422016.E().S(keyType)
//line batch_handler.qtpl:58
			qw422016.N().S(`) (`)
//line batch_handler.qtpl:58
			if hasReturn {
//line batch_handler.qtpl:58
				qw422016.E().S(valueType)
//line batch_handler.qtpl:58
				qw422016.N().S(`, `)
//line batch_handler.qtpl:58
			}
//line batch_handler.qtpl:58
			qw422016.N().S(`error)
`)
//line batch_handler.qtpl:59
		}
//line batch_handler.qtpl:60
	}
//line batch_handler.qtpl:61
	if handlerType.hasCacheSet() {
//line batch_handler.qtpl:62
		if isBatched {
//line batch_handler.qtpl:62
			qw422016.N().S(`    CacheBatchSet func(keys []`)
//line batch_handler.qtpl:63
			qw422016.E().S(keyType)
//line batch_handler.qtpl:63
			if hasReturn {
//line batch_handler.qtpl:63
				qw422016.N().S(`, items []`)
//line batch_handler.qtpl:63
				qw422016.E().S(valueType)
//line batch_handler.qtpl:63
			}
//line batch_handler.qtpl:63
			qw422016.N().S(`) error
`)
//line batch_handler.qtpl:64
		} else {
//line batch_handler.qtpl:64
			qw422016.N().S(`    CacheSet func(key `)
//line batch_handler.qtpl:65
			qw422016.E().S(keyType)
//line batch_handler.qtpl:65
			if hasReturn {
//line batch_handler.qtpl:65
				qw422016.N().S(`, items `)
//line batch_handler.qtpl:65
				qw422016.E().S(valueType)
//line batch_handler.qtpl:65
			}
//line batch_handler.qtpl:65
			qw422016.N().S(`) error
`)
//line batch_handler.qtpl:66
		}
//line batch_handler.qtpl:67
	}
//line batch_handler.qtpl:67
	qw422016.N().S(`}

type `)
//line batch_handler.qtpl:70
	qw422016.E().S(name)
//line batch_handler.qtpl:70
	qw422016.N().S(` struct {
`)
//line batch_handler.qtpl:71
	if isBatched {
//line batch_handler.qtpl:71
		qw422016.N().S(`    Do      func(`)
//line batch_handler.qtpl:72
		if hasKey {
//line batch_handler.qtpl:72
			qw422016.N().S(`keys []`)
//line batch_handler.qtpl:72
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:72
		}
//line batch_handler.qtpl:72
		if hasParams {
//line batch_handler.qtpl:72
			qw422016.N().S(`paramsList []`)
//line batch_handler.qtpl:72
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:72
		}
//line batch_handler.qtpl:72
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:72
		if hasReturn {
//line batch_handler.qtpl:72
			qw422016.N().S(`[]`)
//line batch_handler.qtpl:72
			qw422016.E().S(valueType)
//line batch_handler.qtpl:72
			qw422016.N().S(`, `)
//line batch_handler.qtpl:72
		}
//line batch_handler.qtpl:72
		qw422016.N().S(`[]error)
`)
//line batch_handler.qtpl:73
	} else {
//line batch_handler.qtpl:73
		qw422016.N().S(`    Do           func(`)
//line batch_handler.qtpl:74
		if hasKey {
//line batch_handler.qtpl:74
			qw422016.N().S(`key `)
//line batch_handler.qtpl:74
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:74
		}
//line batch_handler.qtpl:74
		if hasParams {
//line batch_handler.qtpl:74
			qw422016.N().S(`params `)
//line batch_handler.qtpl:74
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:74
		}
//line batch_handler.qtpl:74
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:74
		if hasReturn {
//line batch_handler.qtpl:74
			qw422016.E().S(valueType)
//line batch_handler.qtpl:74
			qw422016.N().S(`, `)
//line batch_handler.qtpl:74
		}
//line batch_handler.qtpl:74
		qw422016.N().S(`error)
`)
//line batch_handler.qtpl:75
	}
//line batch_handler.qtpl:75
	qw422016.N().S(`    Wait         time.Duration
    MaxBatchSize int
`)
//line batch_handler.qtpl:78
	if handlerType.hasCacheDel() {
//line batch_handler.qtpl:78
		qw422016.N().S(`    CacheDel func(keys ...`)
//line batch_handler.qtpl:79
		qw422016.E().S(keyType)
//line batch_handler.qtpl:79
		qw422016.N().S(`) error
`)
//line batch_handler.qtpl:80
	}
//line batch_handler.qtpl:81
	if handlerType.hasCacheGet() {
//line batch_handler.qtpl:82
		if isBatched {
//line batch_handler.qtpl:82
			qw422016.N().S(`    CacheBatchGet func(keys []`)
//line batch_handler.qtpl:83
			qw422016.E().S(keyType)
//line batch_handler.qtpl:83
			qw422016.N().S(`) (`)
//line batch_handler.qtpl:83
			if hasReturn {
//line batch_handler.qtpl:83
				qw422016.N().S(`[]`)
//line batch_handler.qtpl:83
				qw422016.E().S(valueType)
//line batch_handler.qtpl:83
				qw422016.N().S(`, `)
//line batch_handler.qtpl:83
			}
//line batch_handler.qtpl:83
			qw422016.N().S(`error)
`)
//line batch_handler.qtpl:84
		} else {
//line batch_handler.qtpl:84
			qw422016.N().S(`    CacheGet func(key `)
//line batch_handler.qtpl:85
			qw422016.E().S(keyType)
//line batch_handler.qtpl:85
			qw422016.N().S(`) (`)
//line batch_handler.qtpl:85
			if hasReturn {
//line batch_handler.qtpl:85
				qw422016.E().S(valueType)
//line batch_handler.qtpl:85
				qw422016.N().S(`, `)
//line batch_handler.qtpl:85
			}
//line batch_handler.qtpl:85
			qw422016.N().S(`error)
`)
//line batch_handler.qtpl:86
		}
//line batch_handler.qtpl:87
	}
//line batch_handler.qtpl:88
	if handlerType.hasCacheSet() {
//line batch_handler.qtpl:89
		if isBatched {
//line batch_handler.qtpl:89
			qw422016.N().S(`    CacheBatchSet func(keys []`)
//line batch_handler.qtpl:90
			qw422016.E().S(keyType)
//line batch_handler.qtpl:90
			if hasReturn {
//line batch_handler.qtpl:90
				qw422016.N().S(`, items []`)
//line batch_handler.qtpl:90
				qw422016.E().S(valueType)
//line batch_handler.qtpl:90
			}
//line batch_handler.qtpl:90
			qw422016.N().S(`) error
`)
//line batch_handler.qtpl:91
		} else {
//line batch_handler.qtpl:91
			qw422016.N().S(`    CacheSet func(key `)
//line batch_handler.qtpl:92
			qw422016.E().S(keyType)
//line batch_handler.qtpl:92
			if hasReturn {
//line batch_handler.qtpl:92
				qw422016.N().S(`, items `)
//line batch_handler.qtpl:92
				qw422016.E().S(valueType)
//line batch_handler.qtpl:92
			}
//line batch_handler.qtpl:92
			qw422016.N().S(`) error
`)
//line batch_handler.qtpl:93
		}
//line batch_handler.qtpl:94
	}
//line batch_handler.qtpl:94
	qw422016.N().S(`    batch *`)
//line batch_handler.qtpl:95
	qw422016.E().S(lcFirst(data.Name))
//line batch_handler.qtpl:95
	qw422016.N().S(`Batch
    m sync.Mutex
}

func New`)
//line batch_handler.qtpl:99
	qw422016.E().S(name)
//line batch_handler.qtpl:99
	qw422016.N().S(`(config `)
//line batch_handler.qtpl:99
	qw422016.E().S(name)
//line batch_handler.qtpl:99
	qw422016.N().S(`Config) *`)
//line batch_handler.qtpl:99
	qw422016.E().S(name)
//line batch_handler.qtpl:99
	qw422016.N().S(` {
	return &`)
//line batch_handler.qtpl:100
	qw422016.E().S(name)
//line batch_handler.qtpl:100
	qw422016.N().S(`{
		Do: config.Do,
		Wait: config.Wait,
		MaxBatchSize: config.MaxBatchSize,
`)
//line batch_handler.qtpl:104
	if handlerType.hasCacheDel() {
//line batch_handler.qtpl:104
		qw422016.N().S(`        CacheDel: config.CacheDel,
`)
//line batch_handler.qtpl:106
	}
//line batch_handler.qtpl:107
	if handlerType.hasCacheGet() {
//line batch_handler.qtpl:108
		if isBatched {
//line batch_handler.qtpl:108
			qw422016.N().S(`        CacheBatchGet: config.CacheBatchGet,
`)
//line batch_handler.qtpl:110
		} else {
//line batch_handler.qtpl:110
			qw422016.N().S(`        CacheGet: config.CacheGet,
`)
//line batch_handler.qtpl:112
		}
//line batch_handler.qtpl:113
	}
//line batch_handler.qtpl:114
	if handlerType.hasCacheSet() {
//line batch_handler.qtpl:115
		if isBatched {
//line batch_handler.qtpl:115
			qw422016.N().S(`        CacheBatchSet: config.CacheBatchSet,
`)
//line batch_handler.qtpl:117
		} else {
//line batch_handler.qtpl:117
			qw422016.N().S(`        CacheSet: config.CacheSet,
`)
//line batch_handler.qtpl:119
		}
//line batch_handler.qtpl:120
	}
//line batch_handler.qtpl:120
	qw422016.N().S(`	}
}

`)
//line batch_handler.qtpl:124
	if isBatched {
//line batch_handler.qtpl:124
		qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:125
		qw422016.E().S(name)
//line batch_handler.qtpl:125
		qw422016.N().S(`) Query(`)
//line batch_handler.qtpl:125
		if hasKey {
//line batch_handler.qtpl:125
			qw422016.N().S(`key `)
//line batch_handler.qtpl:125
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:125
		}
//line batch_handler.qtpl:125
		if hasParams {
//line batch_handler.qtpl:125
			qw422016.N().S(`params `)
//line batch_handler.qtpl:125
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:125
		}
//line batch_handler.qtpl:125
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:125
		if hasReturn {
//line batch_handler.qtpl:125
			qw422016.E().S(valueType)
//line batch_handler.qtpl:125
			qw422016.N().S(`, `)
//line batch_handler.qtpl:125
		}
//line batch_handler.qtpl:125
		qw422016.N().S(`error) {
	return s.QueryFuture(`)
//line batch_handler.qtpl:126
		if hasKey {
//line batch_handler.qtpl:126
			qw422016.N().S(`key`)
//line batch_handler.qtpl:126
		}
//line batch_handler.qtpl:126
		qw422016.E().S(comma)
//line batch_handler.qtpl:126
		if hasParams {
//line batch_handler.qtpl:126
			qw422016.N().S(`params`)
//line batch_handler.qtpl:126
		}
//line batch_handler.qtpl:126
		qw422016.N().S(`)()
}

func (s *`)
//line batch_handler.qtpl:129
		qw422016.E().S(name)
//line batch_handler.qtpl:129
		qw422016.N().S(`) QueryFuture(`)
//line batch_handler.qtpl:129
		if hasKey {
//line batch_handler.qtpl:129
			qw422016.N().S(`key `)
//line batch_handler.qtpl:129
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:129
		}
//line batch_handler.qtpl:129
		if hasParams {
//line batch_handler.qtpl:129
			qw422016.N().S(`params `)
//line batch_handler.qtpl:129
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:129
		}
//line batch_handler.qtpl:129
		qw422016.N().S(`) func() (`)
//line batch_handler.qtpl:129
		if hasReturn {
//line batch_handler.qtpl:129
			qw422016.E().S(valueType)
//line batch_handler.qtpl:129
			qw422016.N().S(`, `)
//line batch_handler.qtpl:129
		}
//line batch_handler.qtpl:129
		qw422016.N().S(`error) {
	s.m.Lock()
	if s.batch == nil {
		s.batch = &`)
//line batch_handler.qtpl:132
		qw422016.E().S(lcFirst(data.Name))
//line batch_handler.qtpl:132
		qw422016.N().S(`Batch{done: make(chan struct{})}
	}
	batch := s.batch
	pos := batch.getPosition(s, `)
//line batch_handler.qtpl:135
		if hasKey {
//line batch_handler.qtpl:135
			qw422016.N().S(`key`)
//line batch_handler.qtpl:135
		}
//line batch_handler.qtpl:135
		qw422016.E().S(comma)
//line batch_handler.qtpl:135
		if hasParams {
//line batch_handler.qtpl:135
			qw422016.N().S(`params`)
//line batch_handler.qtpl:135
		}
//line batch_handler.qtpl:135
		qw422016.N().S(`)
	s.m.Unlock()

	return func() (`)
//line batch_handler.qtpl:138
		if hasReturn {
//line batch_handler.qtpl:138
			qw422016.E().S(valueType)
//line batch_handler.qtpl:138
			qw422016.N().S(`, `)
//line batch_handler.qtpl:138
		}
//line batch_handler.qtpl:138
		qw422016.N().S(`error) {
		<-batch.done
`)
//line batch_handler.qtpl:140
		if hasReturn {
//line batch_handler.qtpl:140
			qw422016.N().S(`		var data `)
//line batch_handler.qtpl:141
			qw422016.E().S(valueType)
//line batch_handler.qtpl:141
			qw422016.N().S(`
		if pos < len(batch.data) {
			data = batch.data[pos]
		}
`)
//line batch_handler.qtpl:145
		}
//line batch_handler.qtpl:145
		qw422016.N().S(`		var err error
		// its convenient to be able to return a single error for everything
		if len(batch.error) == 1 {
			err = batch.error[0]
		} else if batch.error != nil {
			err = batch.error[pos]
		}

		return `)
//line batch_handler.qtpl:154
		if hasReturn {
//line batch_handler.qtpl:154
			qw422016.N().S(`data, `)
//line batch_handler.qtpl:154
		}
//line batch_handler.qtpl:154
		qw422016.N().S(`err
	}
}

func (s *`)
//line batch_handler.qtpl:158
		qw422016.E().S(name)
//line batch_handler.qtpl:158
		qw422016.N().S(`) QueryAll(`)
//line batch_handler.qtpl:158
		if hasKey {
//line batch_handler.qtpl:158
			qw422016.N().S(`keys []`)
//line batch_handler.qtpl:158
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:158
		}
//line batch_handler.qtpl:158
		if hasParams {
//line batch_handler.qtpl:158
			qw422016.N().S(`paramsList []`)
//line batch_handler.qtpl:158
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:158
		}
//line batch_handler.qtpl:158
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:158
		if hasReturn {
//line batch_handler.qtpl:158
			qw422016.N().S(`[]`)
//line batch_handler.qtpl:158
			qw422016.E().S(valueType)
//line batch_handler.qtpl:158
			qw422016.N().S(`, `)
//line batch_handler.qtpl:158
		}
//line batch_handler.qtpl:158
		qw422016.N().S(`[]error) {
	return s.QueryAllFuture(`)
//line batch_handler.qtpl:159
		if hasKey {
//line batch_handler.qtpl:159
			qw422016.N().S(`keys`)
//line batch_handler.qtpl:159
		}
//line batch_handler.qtpl:159
		qw422016.E().S(comma)
//line batch_handler.qtpl:159
		if hasParams {
//line batch_handler.qtpl:159
			qw422016.N().S(`paramsList`)
//line batch_handler.qtpl:159
		}
//line batch_handler.qtpl:159
		qw422016.N().S(`)()
}

func (s *`)
//line batch_handler.qtpl:162
		qw422016.E().S(name)
//line batch_handler.qtpl:162
		qw422016.N().S(`) QueryAllFuture(`)
//line batch_handler.qtpl:162
		if hasKey {
//line batch_handler.qtpl:162
			qw422016.N().S(`keys []`)
//line batch_handler.qtpl:162
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:162
		}
//line batch_handler.qtpl:162
		if hasParams {
//line batch_handler.qtpl:162
			qw422016.N().S(`paramsList []`)
//line batch_handler.qtpl:162
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:162
		}
//line batch_handler.qtpl:162
		qw422016.N().S(`) func() (`)
//line batch_handler.qtpl:162
		if hasReturn {
//line batch_handler.qtpl:162
			qw422016.N().S(`[]`)
//line batch_handler.qtpl:162
			qw422016.E().S(valueType)
//line batch_handler.qtpl:162
			qw422016.N().S(`, `)
//line batch_handler.qtpl:162
		}
//line batch_handler.qtpl:162
		qw422016.N().S(`[]error) {
	thunks := make([]func() (`)
//line batch_handler.qtpl:163
		if hasReturn {
//line batch_handler.qtpl:163
			qw422016.E().S(valueType)
//line batch_handler.qtpl:163
			qw422016.N().S(`, `)
//line batch_handler.qtpl:163
		}
//line batch_handler.qtpl:163
		qw422016.N().S(`error), len(`)
//line batch_handler.qtpl:163
		if hasKey {
//line batch_handler.qtpl:163
			qw422016.N().S(`keys`)
//line batch_handler.qtpl:163
		} else {
//line batch_handler.qtpl:163
			qw422016.N().S(`paramsList`)
//line batch_handler.qtpl:163
		}
//line batch_handler.qtpl:163
		qw422016.N().S(`))
	for i, item := range `)
//line batch_handler.qtpl:164
		if hasKey {
//line batch_handler.qtpl:164
			qw422016.N().S(`keys`)
//line batch_handler.qtpl:164
		} else {
//line batch_handler.qtpl:164
			qw422016.N().S(`paramsList`)
//line batch_handler.qtpl:164
		}
//line batch_handler.qtpl:164
		qw422016.N().S(` {
        thunks[i] = s.QueryFuture(item`)
//line batch_handler.qtpl:165
		if hasKey && hasParams {
//line batch_handler.qtpl:165
			qw422016.N().S(`, paramsList[i]`)
//line batch_handler.qtpl:165
		}
//line batch_handler.qtpl:165
		qw422016.N().S(`)
	}

	return func() (`)
//line batch_handler.qtpl:168
		if hasReturn {
//line batch_handler.qtpl:168
			qw422016.N().S(`[]`)
//line batch_handler.qtpl:168
			qw422016.E().S(valueType)
//line batch_handler.qtpl:168
			qw422016.N().S(`, `)
//line batch_handler.qtpl:168
		}
//line batch_handler.qtpl:168
		qw422016.N().S(`[]error) {
		errors := make([]error, len(`)
//line batch_handler.qtpl:169
		if hasKey {
//line batch_handler.qtpl:169
			qw422016.N().S(`keys`)
//line batch_handler.qtpl:169
		} else {
//line batch_handler.qtpl:169
			qw422016.N().S(`paramsList`)
//line batch_handler.qtpl:169
		}
//line batch_handler.qtpl:169
		qw422016.N().S(`))
`)
//line batch_handler.qtpl:170
		if hasReturn {
//line batch_handler.qtpl:170
			qw422016.N().S(`        results := make([]`)
//line batch_handler.qtpl:171
			qw422016.E().S(valueType)
//line batch_handler.qtpl:171
			qw422016.N().S(`, len(`)
//line batch_handler.qtpl:171
			if hasKey {
//line batch_handler.qtpl:171
				qw422016.N().S(`keys`)
//line batch_handler.qtpl:171
			} else {
//line batch_handler.qtpl:171
				qw422016.N().S(`paramsList`)
//line batch_handler.qtpl:171
			}
//line batch_handler.qtpl:171
			qw422016.N().S(`))
        for i, thunk := range thunks {
            results[i], errors[i] = thunk()
        }
        return results, errors
`)
//line batch_handler.qtpl:176
		} else {
//line batch_handler.qtpl:176
			qw422016.N().S(`        for i, thunk := range thunks {
            errors[i] = thunk()
        }
        return errors
`)
//line batch_handler.qtpl:181
		}
//line batch_handler.qtpl:181
		qw422016.N().S(`	}
}
`)
//line batch_handler.qtpl:184
	}
//line batch_handler.qtpl:185
	if !isBatched {
//line batch_handler.qtpl:185
		qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:186
		qw422016.E().S(name)
//line batch_handler.qtpl:186
		qw422016.N().S(`) Query(`)
//line batch_handler.qtpl:186
		if hasKey {
//line batch_handler.qtpl:186
			qw422016.N().S(`key `)
//line batch_handler.qtpl:186
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:186
		}
//line batch_handler.qtpl:186
		if hasParams {
//line batch_handler.qtpl:186
			qw422016.N().S(`params `)
//line batch_handler.qtpl:186
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:186
		}
//line batch_handler.qtpl:186
		qw422016.N().S(`) (`)
//line batch_handler.qtpl:186
		if hasReturn {
//line batch_handler.qtpl:186
			qw422016.E().S(valueType)
//line batch_handler.qtpl:186
			qw422016.N().S(`, `)
//line batch_handler.qtpl:186
		}
//line batch_handler.qtpl:186
		qw422016.N().S(`error) {
	return s.QueryFuture(`)
//line batch_handler.qtpl:187
		if hasKey {
//line batch_handler.qtpl:187
			qw422016.N().S(`key`)
//line batch_handler.qtpl:187
		}
//line batch_handler.qtpl:187
		qw422016.E().S(comma)
//line batch_handler.qtpl:187
		if hasParams {
//line batch_handler.qtpl:187
			qw422016.N().S(`params`)
//line batch_handler.qtpl:187
		}
//line batch_handler.qtpl:187
		qw422016.N().S(`)()
}

func (s *`)
//line batch_handler.qtpl:190
		qw422016.E().S(name)
//line batch_handler.qtpl:190
		qw422016.N().S(`) QueryFuture(`)
//line batch_handler.qtpl:190
		if hasKey {
//line batch_handler.qtpl:190
			qw422016.N().S(`key `)
//line batch_handler.qtpl:190
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:190
		}
//line batch_handler.qtpl:190
		if hasParams {
//line batch_handler.qtpl:190
			qw422016.N().S(`params `)
//line batch_handler.qtpl:190
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:190
		}
//line batch_handler.qtpl:190
		qw422016.N().S(`) func() (`)
//line batch_handler.qtpl:190
		if hasReturn {
//line batch_handler.qtpl:190
			qw422016.E().S(valueType)
//line batch_handler.qtpl:190
			qw422016.N().S(`, `)
//line batch_handler.qtpl:190
		}
//line batch_handler.qtpl:190
		qw422016.N().S(`error) {
	s.m.Lock()
	if s.batch == nil {
		s.batch = &`)
//line batch_handler.qtpl:193
		qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:193
		qw422016.N().S(`Batch{done: make(chan struct{})}
	}
	singleFunc := s.batch.getSingleFunc(s, `)
//line batch_handler.qtpl:195
		if hasKey {
//line batch_handler.qtpl:195
			qw422016.N().S(`key`)
//line batch_handler.qtpl:195
		}
//line batch_handler.qtpl:195
		qw422016.E().S(comma)
//line batch_handler.qtpl:195
		if hasParams {
//line batch_handler.qtpl:195
			qw422016.N().S(`params`)
//line batch_handler.qtpl:195
		}
//line batch_handler.qtpl:195
		qw422016.N().S(`)
	s.m.Unlock()
	return singleFunc
}
`)
//line batch_handler.qtpl:199
	}
//line batch_handler.qtpl:199
	qw422016.N().S(`
type `)
//line batch_handler.qtpl:201
	qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:201
	qw422016.N().S(`Batch struct {
`)
//line batch_handler.qtpl:202
	if hasKey {
//line batch_handler.qtpl:202
		qw422016.N().S(`	keys       []`)
//line batch_handler.qtpl:203
		qw422016.E().S(keyType)
//line batch_handler.qtpl:203
		qw422016.N().S(`
`)
//line batch_handler.qtpl:204
	}
//line batch_handler.qtpl:205
	if hasParams {
//line batch_handler.qtpl:205
		qw422016.N().S(`	paramsList []`)
//line batch_handler.qtpl:206
		qw422016.E().S(paramsType)
//line batch_handler.qtpl:206
		qw422016.N().S(`
`)
//line batch_handler.qtpl:207
	}
//line batch_handler.qtpl:208
	if hasReturn {
//line batch_handler.qtpl:208
		qw422016.N().S(`	data []`)
//line batch_handler.qtpl:209
		qw422016.E().S(valueType)
//line batch_handler.qtpl:209
		qw422016.N().S(`
`)
//line batch_handler.qtpl:210
	}
//line batch_handler.qtpl:210
	qw422016.N().S(`	error      []error
`)
//line batch_handler.qtpl:212
	if !isBatched {
//line batch_handler.qtpl:212
		qw422016.N().S(`	funcs  []func() (`)
//line batch_handler.qtpl:213
		if hasReturn {
//line batch_handler.qtpl:213
			qw422016.E().S(valueType)
//line batch_handler.qtpl:213
			qw422016.N().S(`, `)
//line batch_handler.qtpl:213
		}
//line batch_handler.qtpl:213
		qw422016.N().S(`error)
	funcDoneList []chan struct{}
`)
//line batch_handler.qtpl:215
	}
//line batch_handler.qtpl:215
	qw422016.N().S(`	closing    bool
	done       chan struct{}
}

`)
//line batch_handler.qtpl:220
	if isBatched {
//line batch_handler.qtpl:220
		qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:221
		qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:221
		qw422016.N().S(`Batch) getPosition(handler *`)
//line batch_handler.qtpl:221
		qw422016.E().S(name)
//line batch_handler.qtpl:221
		qw422016.N().S(`, `)
//line batch_handler.qtpl:221
		if hasKey {
//line batch_handler.qtpl:221
			qw422016.N().S(`key `)
//line batch_handler.qtpl:221
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:221
		}
//line batch_handler.qtpl:221
		if hasParams {
//line batch_handler.qtpl:221
			qw422016.N().S(`params `)
//line batch_handler.qtpl:221
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:221
		}
//line batch_handler.qtpl:221
		qw422016.N().S(`) int {
`)
//line batch_handler.qtpl:222
		if hasKey {
//line batch_handler.qtpl:222
			qw422016.N().S(`	for i, existingKey := range s.keys {
		if key == existingKey {
			return i
		}
	}
    pos := len(s.keys)
    s.keys = append(s.keys, key)
`)
//line batch_handler.qtpl:230
		} else {
//line batch_handler.qtpl:230
			qw422016.N().S(`    pos := len(s.paramsList)
`)
//line batch_handler.qtpl:232
		}
//line batch_handler.qtpl:233
		if hasParams {
//line batch_handler.qtpl:233
			qw422016.N().S(`	s.paramsList = append(s.paramsList, params)
`)
//line batch_handler.qtpl:235
		}
//line batch_handler.qtpl:235
		qw422016.N().S(`	if pos == 0 {
		go s.waiting(handler)
	}

	if handler.MaxBatchSize != 0 && pos >= handler.MaxBatchSize-1 {
		if !s.closing {
			s.closing = true
			handler.batch = nil
			go s.finish(handler)
		}
	}

	return pos
}
`)
//line batch_handler.qtpl:250
	}
//line batch_handler.qtpl:251
	if !isBatched {
//line batch_handler.qtpl:251
		qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:252
		qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:252
		qw422016.N().S(`Batch) getSingleFunc(handler *`)
//line batch_handler.qtpl:252
		qw422016.E().S(name)
//line batch_handler.qtpl:252
		qw422016.N().S(`, `)
//line batch_handler.qtpl:252
		if hasKey {
//line batch_handler.qtpl:252
			qw422016.N().S(`key `)
//line batch_handler.qtpl:252
			qw422016.E().S(keyTypeComma)
//line batch_handler.qtpl:252
		}
//line batch_handler.qtpl:252
		if hasParams {
//line batch_handler.qtpl:252
			qw422016.N().S(`params `)
//line batch_handler.qtpl:252
			qw422016.E().S(paramsType)
//line batch_handler.qtpl:252
		}
//line batch_handler.qtpl:252
		qw422016.N().S(`) func() (`)
//line batch_handler.qtpl:252
		if hasReturn {
//line batch_handler.qtpl:252
			qw422016.E().S(valueType)
//line batch_handler.qtpl:252
			qw422016.N().S(`, `)
//line batch_handler.qtpl:252
		}
//line batch_handler.qtpl:252
		qw422016.N().S(`error) {
`)
//line batch_handler.qtpl:253
		if hasKey {
//line batch_handler.qtpl:253
			qw422016.N().S(`	for i, existingKey := range s.keys {
		if key == existingKey {
			pos := i
			return func() (`)
//line batch_handler.qtpl:257
			if hasReturn {
//line batch_handler.qtpl:257
				qw422016.E().S(valueType)
//line batch_handler.qtpl:257
				qw422016.N().S(`, `)
//line batch_handler.qtpl:257
			}
//line batch_handler.qtpl:257
			qw422016.N().S(`error) {
				<- s.funcDoneList[pos]
				return `)
//line batch_handler.qtpl:259
			if hasReturn {
//line batch_handler.qtpl:259
				qw422016.N().S(`s.data[pos], `)
//line batch_handler.qtpl:259
			}
//line batch_handler.qtpl:259
			qw422016.N().S(`s.error[pos]
			}
		}
	}
	pos := len(s.keys)
	s.keys = append(s.keys, key)
`)
//line batch_handler.qtpl:265
		} else {
//line batch_handler.qtpl:265
			qw422016.N().S(`    pos := len(s.funcDoneList)
`)
//line batch_handler.qtpl:267
		}
//line batch_handler.qtpl:267
		qw422016.N().S(`	funcDone := make(chan struct{})
	s.funcDoneList = append(s.funcDoneList, funcDone)
`)
//line batch_handler.qtpl:270
		if hasReturn {
//line batch_handler.qtpl:270
			qw422016.N().S(`	s.data = append(s.data, `)
//line batch_handler.qtpl:271
			qw422016.N().S(valueTypeZeroValue)
//line batch_handler.qtpl:271
			qw422016.N().S(`)
`)
//line batch_handler.qtpl:272
		}
//line batch_handler.qtpl:272
		qw422016.N().S(`	s.error = append(s.error, nil)

	singleFunc := func() (`)
//line batch_handler.qtpl:275
		if hasReturn {
//line batch_handler.qtpl:275
			qw422016.E().S(valueType)
//line batch_handler.qtpl:275
			qw422016.N().S(`, `)
//line batch_handler.qtpl:275
		}
//line batch_handler.qtpl:275
		qw422016.N().S(`error) {
		<- s.done
        `)
//line batch_handler.qtpl:277
		if hasReturn {
//line batch_handler.qtpl:277
			qw422016.N().S(`var item `)
//line batch_handler.qtpl:277
			qw422016.E().S(valueType)
//line batch_handler.qtpl:277
		}
//line batch_handler.qtpl:277
		qw422016.N().S(`
        var err error

`)
//line batch_handler.qtpl:280
		if handlerType.hasCacheGet() {
//line batch_handler.qtpl:280
			qw422016.N().S(`        fromCache := false
        if handler.CacheGet != nil {
            if item, err = handler.CacheGet(key); err == nil {
                fromCache = true
            }
        }
        if !fromCache {
            item, err = handler.Do(`)
//line batch_handler.qtpl:288
			if hasKey {
//line batch_handler.qtpl:288
				qw422016.N().S(`key`)
//line batch_handler.qtpl:288
			}
//line batch_handler.qtpl:288
			qw422016.E().S(comma)
//line batch_handler.qtpl:288
			if hasParams {
//line batch_handler.qtpl:288
				qw422016.N().S(`params`)
//line batch_handler.qtpl:288
			}
//line batch_handler.qtpl:288
			qw422016.N().S(`)
        }
`)
//line batch_handler.qtpl:290
		} else {
//line batch_handler.qtpl:290
			qw422016.N().S(`        `)
//line batch_handler.qtpl:291
			if hasReturn {
//line batch_handler.qtpl:291
				qw422016.N().S(`item, `)
//line batch_handler.qtpl:291
			}
//line batch_handler.qtpl:291
			qw422016.N().S(`err = handler.Do(`)
//line batch_handler.qtpl:291
			if hasKey {
//line batch_handler.qtpl:291
				qw422016.N().S(`key`)
//line batch_handler.qtpl:291
			}
//line batch_handler.qtpl:291
			qw422016.E().S(comma)
//line batch_handler.qtpl:291
			if hasParams {
//line batch_handler.qtpl:291
				qw422016.N().S(`params`)
//line batch_handler.qtpl:291
			}
//line batch_handler.qtpl:291
			qw422016.N().S(`)
`)
//line batch_handler.qtpl:292
		}
//line batch_handler.qtpl:293
		if hasReturn {
//line batch_handler.qtpl:293
			qw422016.N().S(`        s.data[pos] = item
`)
//line batch_handler.qtpl:295
		}
//line batch_handler.qtpl:295
		qw422016.N().S(`		s.error[pos] = err
		close(funcDone)

`)
//line batch_handler.qtpl:299
		if handlerType.hasCacheSet() {
//line batch_handler.qtpl:299
			qw422016.N().S(`        if !fromCache && err == nil && handler.CacheSet != nil {
            _ = handler.CacheSet(key, item)
        }
`)
//line batch_handler.qtpl:303
		}
//line batch_handler.qtpl:304
		if handlerType.hasCacheDel() {
//line batch_handler.qtpl:304
			qw422016.N().S(`        if handler.CacheDel != nil {
            _ = handler.CacheDel(key)
        }
`)
//line batch_handler.qtpl:308
		}
//line batch_handler.qtpl:308
		qw422016.N().S(`		return `)
//line batch_handler.qtpl:309
		if hasReturn {
//line batch_handler.qtpl:309
			qw422016.N().S(`item, `)
//line batch_handler.qtpl:309
		}
//line batch_handler.qtpl:309
		qw422016.N().S(`err
	}

	s.funcs = append(s.funcs, singleFunc)

	if pos == 0 {
		go s.waiting(handler)
	}

	if handler.MaxBatchSize != 0 && pos >= handler.MaxBatchSize-1 {
		if !s.closing {
			s.closing = true
			handler.batch = nil
			close(s.done)
		}
	}

	return singleFunc
}
`)
//line batch_handler.qtpl:328
	}
//line batch_handler.qtpl:328
	qw422016.N().S(`
func (s *`)
//line batch_handler.qtpl:330
	qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:330
	qw422016.N().S(`Batch) waiting(handler *`)
//line batch_handler.qtpl:330
	qw422016.E().S(name)
//line batch_handler.qtpl:330
	qw422016.N().S(`) {
	time.Sleep(handler.Wait)
	handler.m.Lock()
	if s.closing {
		handler.m.Unlock()
		return
	}
	handler.batch = nil
	handler.m.Unlock()

`)
//line batch_handler.qtpl:340
	if isBatched {
//line batch_handler.qtpl:340
		qw422016.N().S(`	s.finish(handler)
`)
//line batch_handler.qtpl:342
	} else {
//line batch_handler.qtpl:342
		qw422016.N().S(`	close(s.done)
`)
//line batch_handler.qtpl:344
	}
//line batch_handler.qtpl:344
	qw422016.N().S(`}

`)
//line batch_handler.qtpl:347
	if isBatched {
//line batch_handler.qtpl:347
		qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:348
		qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:348
		qw422016.N().S(`Batch) finish(handler *`)
//line batch_handler.qtpl:348
		qw422016.E().S(name)
//line batch_handler.qtpl:348
		qw422016.N().S(`) {
`)
//line batch_handler.qtpl:349
		if hasKey && hasReturn && handlerType.hasCacheGet() {
//line batch_handler.qtpl:349
			qw422016.N().S(`    if s.fetchItemsWithCache(handler) {
		return
	}
`)
//line batch_handler.qtpl:353
		}
//line batch_handler.qtpl:353
		qw422016.N().S(`    `)
//line batch_handler.qtpl:354
		if hasReturn {
//line batch_handler.qtpl:354
			qw422016.N().S(`s.data, `)
//line batch_handler.qtpl:354
		}
//line batch_handler.qtpl:354
		qw422016.N().S(`s.error = handler.Do(`)
//line batch_handler.qtpl:354
		if hasKey {
//line batch_handler.qtpl:354
			qw422016.N().S(`s.keys`)
//line batch_handler.qtpl:354
		}
//line batch_handler.qtpl:354
		qw422016.E().S(comma)
//line batch_handler.qtpl:354
		if hasParams {
//line batch_handler.qtpl:354
			qw422016.N().S(`s.paramsList`)
//line batch_handler.qtpl:354
		}
//line batch_handler.qtpl:354
		qw422016.N().S(`)
	close(s.done)

`)
//line batch_handler.qtpl:357
		if hasKey && hasReturn && handlerType.hasCacheSet() {
//line batch_handler.qtpl:357
			qw422016.N().S(`	if handler.CacheBatchSet != nil {
		if len(s.error) == 0 {
			_ = handler.CacheBatchSet(s.keys, s.data)
			return
		}
		var keys []`)
//line batch_handler.qtpl:363
			qw422016.E().S(keyType)
//line batch_handler.qtpl:363
			qw422016.N().S(`
		var data []`)
//line batch_handler.qtpl:364
			qw422016.E().S(valueType)
//line batch_handler.qtpl:364
			qw422016.N().S(`

		for i, err := range s.error {
			if err == nil {
				keys = append(keys, s.keys[i])
				data = append(data, s.data[i])
			}
		}

		if len(keys) > 0 {
			_ = handler.CacheBatchSet(keys, data)
			return
		}
	}
`)
//line batch_handler.qtpl:378
		}
//line batch_handler.qtpl:379
		if handlerType.hasCacheDel() {
//line batch_handler.qtpl:379
			qw422016.N().S(`    if handler.CacheDel != nil {
        _ = handler.CacheDel(s.keys...)
    }
`)
//line batch_handler.qtpl:383
		}
//line batch_handler.qtpl:383
		qw422016.N().S(`}

`)
//line batch_handler.qtpl:386
		if hasKey && hasReturn && handlerType.hasCacheGet() {
//line batch_handler.qtpl:386
			qw422016.N().S(`func (s *`)
//line batch_handler.qtpl:387
			qw422016.E().S(lcFirst(name))
//line batch_handler.qtpl:387
			qw422016.N().S(`Batch) fetchItemsWithCache(handler *`)
//line batch_handler.qtpl:387
			qw422016.E().S(name)
//line batch_handler.qtpl:387
			qw422016.N().S(`) bool {
	if handler.CacheBatchGet == nil {
		return false
	}
	items, err := handler.CacheBatchGet(s.keys)
	if err != nil {
		return false
	}
    // collect nil items and fetch data with handle.Do
`)
//line batch_handler.qtpl:396
			if hasKey {
//line batch_handler.qtpl:396
				qw422016.N().S(`	newKeys := make([]`)
//line batch_handler.qtpl:397
				qw422016.E().S(keyType)
//line batch_handler.qtpl:397
				qw422016.N().S(`, 0, 8)
`)
//line batch_handler.qtpl:398
			}
//line batch_handler.qtpl:399
			if hasParams {
//line batch_handler.qtpl:399
				qw422016.N().S(`    params := make([]`)
//line batch_handler.qtpl:400
				qw422016.E().S(paramsType)
//line batch_handler.qtpl:400
				qw422016.N().S(`, 0, 8)
`)
//line batch_handler.qtpl:401
			}
//line batch_handler.qtpl:401
			qw422016.N().S(`	for i, item := range items {
		if item == nil {
`)
//line batch_handler.qtpl:404
			if hasKey {
//line batch_handler.qtpl:404
				qw422016.N().S(`			newKeys = append(newKeys, s.keys[i])
`)
//line batch_handler.qtpl:406
			}
//line batch_handler.qtpl:407
			if hasParams {
//line batch_handler.qtpl:407
				qw422016.N().S(`			params = append(params, s.paramsList[i])
`)
//line batch_handler.qtpl:409
			}
//line batch_handler.qtpl:409
			qw422016.N().S(`		}
	}

    if len(newKeys) == 0 {
		s.data, s.error = items, nil
		close(s.done)
		return true
	}

	finalErrs := make([]error, len(items))
	newItems, errs := handler.Do(newKeys`)
//line batch_handler.qtpl:420
			if hasParams {
//line batch_handler.qtpl:420
				qw422016.N().S(`, params`)
//line batch_handler.qtpl:420
			}
//line batch_handler.qtpl:420
			qw422016.N().S(`)
	idx := 0
	for i, item := range items {
		if item == nil {
			items[i] = newItems[idx]
			if len(errs) == 1 {
				finalErrs[i] = errs[0]
			} else if errs != nil {
				finalErrs[i] = errs[idx]
			}
			idx++
		}
	}
	// set and notify
    s.data, s.error = items, errs
    close(s.done)

    if errs == nil && handler.CacheBatchSet != nil {
        _ = handler.CacheBatchSet(newKeys, newItems)
    }
    return true
}

`)
//line batch_handler.qtpl:443
		}
//line batch_handler.qtpl:443
		qw422016.N().S(`

`)
//line batch_handler.qtpl:446
	}
//line batch_handler.qtpl:447
}

//line batch_handler.qtpl:447
func WriteGenerateBatchHandler(qq422016 qtio422016.Writer, data *handlerData) {
//line batch_handler.qtpl:447
	qw422016 := qt422016.AcquireWriter(qq422016)
//line batch_handler.qtpl:447
	StreamGenerateBatchHandler(qw422016, data)
//line batch_handler.qtpl:447
	qt422016.ReleaseWriter(qw422016)
//line batch_handler.qtpl:447
}

//line batch_handler.qtpl:447
func GenerateBatchHandler(data *handlerData) string {
//line batch_handler.qtpl:447
	qb422016 := qt422016.AcquireByteBuffer()
//line batch_handler.qtpl:447
	WriteGenerateBatchHandler(qb422016, data)
//line batch_handler.qtpl:447
	qs422016 := string(qb422016.B)
//line batch_handler.qtpl:447
	qt422016.ReleaseByteBuffer(qb422016)
//line batch_handler.qtpl:447
	return qs422016
//line batch_handler.qtpl:447
}
